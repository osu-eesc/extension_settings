<?php

/**
 * Extension Settings
 * Helper module for EESC managed Drupal sites.
 * This module provides configuration settings.
 */
/**
 * Implementation of hook_init().
 */
function extension_settings_init() {
  drupal_add_css(drupal_get_path('module', 'extension_settings') .'/css/ggai.css');
  drupal_add_css(drupal_get_path('module', 'extension_settings') .'/css/extension_settings.css');
}
/**
 * Implementation of hook_help()
 * Provide online user help.
 *
 * @param $path
 * @param $arg
 * @return
 *   Help text
 */
function extension_settings_help($path, $arg) {
  switch ($path) {
    case 'admin/settings/extension_settings':
      $output = file_get_contents(drupal_get_path('module', 'extension_settings') .'/README.txt');
       return '<div>'. check_plain($output) .'</div>';
    case 'admin/help#extension_settings':
      return '<p>'. t('The Extension Settings module provides common blocks and custom site configuration settings.') .'</p>';
    default:
      return '';
  }
}
/**
 * Implementation of hook_perm().
 */
function extension_settings_perm() {
  $extension_permissions[] = 'administer extension settings';
  $extension_permissions[] = 'administer extension global content';
  $extension_permissions[] = 'administer extension banners';
  return $extension_permissions;
}
/**
 * Implementation of hook_menu().
 */
function extension_settings_menu() {
  $items = array();
  $items['admin/settings/extension'] = array(
    'title' => t('Extension settings'),
    'description' => t('Administer settings related to the Extension Settings module.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('extension_settings_admin_settings'),
    'access arguments' => array('administer extension settings'),
    'file' => 'includes/extension_settings.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );
  $items['admin/settings/extension/admin'] = array(
    'title' => t('Extension settings'),
    'description' => t('Administer settings related to the Extension Settings module.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('extension_settings_admin_settings'),
    'access arguments' => array('administer extension settings'),
    'weight' => 1,
    'file' => 'includes/extension_settings.admin.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/settings/extension/header-menu'] = array(
    'title' => t('Header Top Menu'),
    'description' => t('Administer header top menu.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('extension_settings_header_menu'),
    'access arguments' => array('administer extension settings'),
    'weight' => 2,
    'file' => 'includes/extension_settings.header_menu.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/settings/extension/header-menu/remove'] = array(
    'title' => t('Remove Header Menu Item'),
    'description' => t('Removes a header menu item.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('extension_settings_header_menu_remove'),
    'access arguments' => array('administer extension settings'),
    'file' => 'includes/extension_settings.header_menu.inc',
    'type' => MENU_CALLBACK,
  );
  $items['admin/settings/extension/banners'] = array(
    'title' => t('Banners'),
    'description' => t('Administer Extension banners.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('extension_settings_banners'),
    'access arguments' => array('administer extension banners'),
    'weight' => 3,
    'file' => 'includes/extension_settings.banners.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/settings/extension/global'] = array(
    'title' => t('Global content'),
    'description' => t('Administer global content accross all extension sites.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('extension_settings_global_emergency'),
    'access arguments' => array('administer extension global content'),
    'weight' => 4,
    'file' => 'includes/extension_settings.global.emergency.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['admin/settings/extension/global/emergency'] = array(
    'title' => t('Emergency Information'),
    'description' => t('Global content for Emergency Information.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('extension_settings_global_emergency'),
    'access arguments' => array('administer extension global content'),
    'file' => 'includes/extension_settings.global.emergency.inc',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );
  $items['admin/settings/extension/global/remove'] = array(
    'title' => t('Remove Emergency Notification'),
    'description' => t('Removes an Emergency Information.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('extension_settings_global_emergency_remove'),
    'access arguments' => array('administer extension global content'),
    'file' => 'includes/extension_settings.global.emergency.inc',
    'type' => MENU_CALLBACK,
  );  $items['admin/settings/extension/global/block2'] = array(
    'title' => t('Block 2'),
    'description' => t('Global content for block 2.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('extension_settings_global_block2'),
    'access arguments' => array('administer extension global content'),
    'weight' => 2,
    'file' => 'includes/extension_settings.global.block2.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['globalblock1'] = array(
    'title' => t('Emergency Information'),
    'page callback' => 'extension_settings_global_block_1_code',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['globalblock2'] = array(
    'title' => t('Global Content block 2'),
    'page callback' => 'extension_settings_global_block_2_code',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  $items['calevent'] = array(
    'title' => t('Calendar Event'),
    'page callback' => 'extension_settings_calendar_event',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );
  return $items;
}
/**
* Implementation of hook_block().
* @param string $op one of "list", "view", "save" and "configure"
* @param integer $delta code to identify the block
*/
function extension_settings_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'list') {
    $blocks[0]['info'] = t('Life: Get good at it sidebar links');
    $blocks[1]['info'] = t('Calendar Block 1 (CWS Feed)');
    $blocks[2]['info'] = t('Calendar Block 2 (CWS Feed)');
    $blocks[3]['info'] = t('Calendar Block 3 (CWS Feed)');
    $blocks[4]['info'] = t('Calendar Block 4 (CWS Feed)');
    $blocks[5]['info'] = t('Extension Header Top Menu');
/*    $blocks[6]['info'] = t('Badge - Health and Wellness');
    $blocks[7]['info'] = t('Badge - Small Farms');
    $blocks[8]['info'] = t('Calendar Block (CWS Feed)'); */
    $blocks[9]['info'] = t('Emergency Information Block');
    $blocks[10]['info'] = t('Global Content Block 2');
    $blocks[11]['info'] = t('Extension Neapolitan Block');
    $blocks[12]['info'] = t('Extension Banners Block');
    $blocks[13]['info'] = t('Extension Drupal help block');
    return $blocks;
  } 
  elseif ($op == 'view') {
    $block = array();
    switch ($delta) {
      case 0:
        $ggai_output = '
          <div id="ggai-block" class="ggai-block">
            <div class="ggai-block-header"></div>
            <div class="wm_sun">
              <ul>
                <li class="item-1"><span><a href="http://extension.oregonstate.edu/node/320" title="Gardening: Get Good at It.">Gardening</a></span></li>
                <li class="item-7"><span><a href="http://extension.oregonstate.edu/node/304" title="Small Farms: Get Good at It.">Small Farms</a></span></li>
                <li class="item-3"><span><a href="http://extension.oregonstate.edu/node/305" title="Food Preservation: Get Good at It.">Food Preservation</a></span></li>
                <li class="item-4"><span><a href="http://extension.oregonstate.edu/node/306" title="Food &amp; Nutrition: Get Good at It.">Food &amp; Nutrition</a></span></li>
                <li class="item-5"><span><a href="http://extension.oregonstate.edu/node/307" title="Family &amp; Youth: Get Good at It.">Family &amp; Youth</a></span></li>
                <ul id="ggai_hidden" style="list-style-type: none; margin-left: 0px; display: none;">
                  <li class="item-6"><span><a href="http://extension.oregonstate.edu/node/308" title="Health &amp; Wellness: Get Good at It.">Health &amp; Wellness</a></span></li>
                  <li class="item-8"><span><a href="http://extension.oregonstate.edu/node/4407" title="Environment: Get Good at It.">Environment</a></span></li>
                  <li class="item-2"><span><a href="http://extension.oregonstate.edu/node/3333" title="Trees &amp; Woodlands: Get Good at It.">Trees &amp; Woodlands</a></span></li>
                  </ul>
                </ul>
                <p style="margin: 0.5em 0 1em -30px;">
                  <a id="ggai_hidden_link" style="color: #E48101; font-weight: normal; 	font-family: Arial, Helvetica, Verdana, '."'Bitstream Vera Sans'".', sans-serif; cursor: pointer;" onclick="javascript: ($('."'#ggai_hidden'".').css('."'display'".') == '."'none'".')? $('."'#ggai_hidden'".').slideDown('."'fast'".', function(){$('."'#ggai_hidden_link'".').html('."'Show less »'".'); $('."'".'.wm_sun'."'".').css('."'".'padding-bottom'."'".', '."'".'40px'."'".');}) : $('."'#ggai_hidden'".').slideUp('."'fast'".', function(){$('."'#ggai_hidden_link'".').html('."'Show more »'".'); $('."'".'.wm_sun'."'".').css('."'".'padding-bottom'."'".', '."'".'30px'."'".');})">Show more »</a>
                </p>
                  </div>
            </div>
            <!--[if lte IE 8]>
            <style type="text/css">
            #ggai_hidden_link {
              margin-left: 30px;
            }
            #ggai_hidden {
              margin-top: 6px;
            }
            #ggai-block {
              padding-bottom: 0px;
            }
            </style>
            <![endif]-->';
        $block['subject'] = t('');
        $block['content'] = t($ggai_output);
        return $block;
      case 1:
        $shortname = variable_get('extension_settings_calendar1_shortname', '');
        $lookahead = variable_get('extension_settings_calendar1_lookahead', '90');
        $disp_num = variable_get('extension_settings_calendar1_numdisplay', '5');
        $teaser = variable_get('extension_settings_calendar1_teaser', '15');
        $calendar_output = '';
        $xml_path = 'http://calendar.oregonstate.edu/today+' . $lookahead . '/list/' . $shortname . '/rss20.xml';
        $xml = simplexml_load_file($xml_path);
        $flag = count($xml->channel->item);
        if ($shortname == '') $flag = 0;
        if ($flag != 0) {
          $calendar_output .= '<div id="calendar"><a class="rss" title="Click for RSS feed" href="';
          $calendar_output .= $xml_path;
          $calendar_output .= '"><img src="http://extension.oregonstate.edu/_includes/images/rss_icon.png" width="15" height="15" alt="rss icon image" /></a>';
        }
        for ($i = 0; $i < count($xml->channel->item) && $i < $disp_num; $i++) {
          unset($event);
          $event = $xml->channel->item[$i];
          $event_title = $event->title;
          $event_link = $event->link;
          preg_match('/<div(.*?)<\/div>/', $event->description, $matches);
          $dates = strip_tags($matches[0]);
          $event->description = preg_replace('/<div(.*?)<\/div>/', '', $event->description);
          $event_body = preg_split('/\s+/', trim(strip_tags($event->description)), ($teaser + 1));
          if (count($event_body) == $teaser + 1) {
            array_pop($event_body);
            $event_body[] = '&hellip;';
          }
          unset($event);
          $event['allday'] = 0;
          if (preg_match('/\(.*?\)/', $dates) != 0) $event['allday'] = 1;
          $dates = explode(' - ', preg_replace('/\(.*?\)/', '', $dates));
          $event['start'] = strtotime($dates[0]);
          $event['newday'] = 0;
          if (isset($dates[1])) {
            if (preg_match('/(mon)|(tue)|(wed)|(thu)|(fri)|(sat)|(sun)/i', $dates[1]) != 0) {
              $event['newday'] = 1;
            }
            $event['end'] = strtotime($dates[1]);
          }
          $event['date'] = '<span class="start">';
          $event['date'] .= date('M. d, Y', $event['start']) . ' <span class="time">';
          if (!isset($event['end']) && $event['newday'] == 0) {
            $event['date'] .= '(all day)';
          } 
          elseif ($event['allday'] == 1 && $event['newday'] == 1) {
            $event['date'] .= '';
          } 
          else {
            $event['date'] .= date('g:ia', $event['start']);
          }
          $event['date'] .= '</span></span>';
          if (isset($event['end'])) {
            $event['date'] .= ' - <span class="end">';
            if ($event['newday'] == 1) {
              $event['date'] .= date('M. d, Y', $event['end']);
            }
            $event['date'] .= ' <span class="time">';
            if ($event['newday'] == 1 && $event['allday'] == 1) {
              $event['date'] .= '(all day)';
            } 
            else {
              $event['date'] .= date('g:ia', $event['end']);
            }
            $event['date'] .= '</span></span>';
          }
          $event['title'] = $event_title;
          $event['link'] = $event_link;
          $event['body'] = implode(' ', $event_body);
          $calendar_output .= '<div class="event"><div class="date">';
          $calendar_output .= $event['date'];
          $calendar_output .= '</div><div class="description"><div class="event-title"><a href="' . base_path() . 'calevent?path=';
          $calendar_output .= $event['link'];
          $calendar_output .= '" rel="lightmodal[|width:560px;]">';
          $calendar_output .= $event['title'];
          $calendar_output .= '</a></div><div class="teaser">';
          $calendar_output .= $event['body'];
          $calendar_output .= '</div></div></div>';
        }
        if ($flag != 0) {
          $calendar_output .= '</div><div class="view-more"><a href="http://calendar.oregonstate.edu/advanced/today+60/';
          $calendar_output .= $shortname;
          $calendar_output .= '">view more events &raquo;</a></div>';
        }
        if ($flag == 0) $calendar_output = '';
        $block['subject'] = t('Upcoming Events');
        $block['content'] = $calendar_output;
        unset($shortname);
        unset($lookahead);
        unset($disp_num);
        unset($teaser);
        return $block;
      case 2:
        $shortname = variable_get('extension_settings_calendar2_shortname', '');
        $lookahead = variable_get('extension_settings_calendar2_lookahead', '90');
        $disp_num = variable_get('extension_settings_calendar2_numdisplay', '5');
        $teaser = variable_get('extension_settings_calendar2_teaser', '15');
        $calendar_output = '';
        $xml_path = 'http://calendar.oregonstate.edu/today+' . $lookahead . '/list/' . $shortname . '/rss20.xml';
        $xml = simplexml_load_file($xml_path);
        $flag = count($xml->channel->item);
        if ($shortname == '') $flag = 0;
        if ($flag != 0) {
          $calendar_output .= '<div id="calendar"><a class="rss" href="';
          $calendar_output .= $xml_path;
          $calendar_output .= '"><img src="http://extension.oregonstate.edu/sites/default/files/images/icons/rss_icon.png" width="15" height="15" /></a>';
        }
        for ($i = 0; $i < count($xml->channel->item) && $i < $disp_num; $i++) {
          unset($event);
          $event = $xml->channel->item[$i];
          $event_title = $event->title;
          $event_link = $event->link;
          preg_match('/<div(.*?)<\/div>/', $event->description, $matches);
          $dates = strip_tags($matches[0]);
          $event->description = preg_replace('/<div(.*?)<\/div>/', '', $event->description);
          $event_body = preg_split('/\s+/', trim(strip_tags($event->description)), ($teaser + 1));
          if (count($event_body) == $teaser + 1) {
            array_pop($event_body);
            $event_body[] = '&hellip;';
          }
          unset($event);
          $event['allday'] = 0;
          if (preg_match('/\(.*?\)/', $dates) != 0) $event['allday'] = 1;
          $dates = explode(' - ', preg_replace('/\(.*?\)/', '', $dates));
          $event['start'] = strtotime($dates[0]);
          $event['newday'] = 0;
          if (isset($dates[1])) {
            if (preg_match('/(mon)|(tue)|(wed)|(thu)|(fri)|(sat)|(sun)/i', $dates[1]) != 0) {
              $event['newday'] = 1;
            }
            $event['end'] = strtotime($dates[1]);
          }
          $event['date'] = '<span class="start">';
          $event['date'] .= date('M. d, Y', $event['start']) . ' <span class="time">';
          if (!isset($event['end']) && $event['newday'] == 0) {
            $event['date'] .= '(all day)';
          } 
          elseif ($event['allday'] == 1 && $event['newday'] == 1) {
            $event['date'] .= '';
          } 
          else {
            $event['date'] .= date('g:ia', $event['start']);
          }
          $event['date'] .= '</span></span>';
          if (isset($event['end'])) {
            $event['date'] .= ' - <span class="end">';
            if ($event['newday'] == 1) {
              $event['date'] .= date('M. d, Y', $event['end']);
            }
            $event['date'] .= ' <span class="time">';
            if ($event['newday'] == 1 && $event['allday'] == 1) {
              $event['date'] .= '(all day)';
            } 
            else {
              $event['date'] .= date('g:ia', $event['end']);
            }
            $event['date'] .= '</span></span>';
          }
          $event['title'] = $event_title;
          $event['link'] = $event_link;
          $event['body'] = implode(' ', $event_body);
          $calendar_output .= '<div class="event"><div class="date">';
          $calendar_output .= $event['date'];
          $calendar_output .= '</div><div class="description"><div class="event-title"><a href="' . base_path() . 'calevent?path=';
          $calendar_output .= $event['link'];
          $calendar_output .= '" rel="lightmodal[|width:560px;]">';
          $calendar_output .= $event['title'];
          $calendar_output .= '</a></div><div class="teaser">';
          $calendar_output .= $event['body'];
          $calendar_output .= '</div></div></div>';
        }
        if ($flag != 0) {
          $calendar_output .= '</div><div class="view-more"><a href="http://calendar.oregonstate.edu/advanced/today+60/';
          $calendar_output .= $shortname;
          $calendar_output .= '">view more events &raquo;</a></div>';
        }
        if ($flag == 0) $calendar_output = '';
        $block['subject'] = t('Upcoming Events');
        $block['content'] = $calendar_output;
        unset($shortname);
        unset($lookahead);
        unset($disp_num);
        unset($teaser);
        return $block;
      case 3:
        $shortname = variable_get('extension_settings_calendar3_shortname', '');
        $lookahead = variable_get('extension_settings_calendar3_lookahead', '90');
        $disp_num = variable_get('extension_settings_calendar3_numdisplay', '5');
        $teaser = variable_get('extension_settings_calendar3_teaser', '15');
        $calendar_output = '';
        $xml_path = 'http://calendar.oregonstate.edu/today+' . $lookahead . '/list/' . $shortname . '/rss20.xml';
        $xml = simplexml_load_file($xml_path);
        $flag = count($xml->channel->item);
        if ($shortname == '') $flag = 0;
        if ($flag != 0) {
          $calendar_output .= '<div id="calendar"><a class="rss" href="';
          $calendar_output .= $xml_path;
          $calendar_output .= '"><img src="http://extension.oregonstate.edu/sites/default/files/images/icons/rss_icon.png" width="15" height="15" /></a>';
        }
        for ($i = 0; $i < count($xml->channel->item) && $i < $disp_num; $i++) {
          unset($event);
          $event = $xml->channel->item[$i];
          $event_title = $event->title;
          $event_link = $event->link;
          preg_match('/<div(.*?)<\/div>/', $event->description, $matches);
          $dates = strip_tags($matches[0]);
          $event->description = preg_replace('/<div(.*?)<\/div>/', '', $event->description);
          $event_body = preg_split('/\s+/', trim(strip_tags($event->description)), ($teaser + 1));
          if (count($event_body) == $teaser + 1) {
            array_pop($event_body);
            $event_body[] = '&hellip;';
          }
          unset($event);
          $event['allday'] = 0;
          if (preg_match('/\(.*?\)/', $dates) != 0) $event['allday'] = 1;
          $dates = explode(' - ', preg_replace('/\(.*?\)/', '', $dates));
          $event['start'] = strtotime($dates[0]);
          $event['newday'] = 0;
          if (isset($dates[1])) {
            if (preg_match('/(mon)|(tue)|(wed)|(thu)|(fri)|(sat)|(sun)/i', $dates[1]) != 0) {
              $event['newday'] = 1;
            }
            $event['end'] = strtotime($dates[1]);
          }
          $event['date'] = '<span class="start">';
          $event['date'] .= date('M. d, Y', $event['start']) . ' <span class="time">';
          if (!isset($event['end']) && $event['newday'] == 0) {
            $event['date'] .= '(all day)';
          } 
          elseif ($event['allday'] == 1 && $event['newday'] == 1) {
            $event['date'] .= '';
          } 
          else {
            $event['date'] .= date('g:ia', $event['start']);
          }
          $event['date'] .= '</span></span>';
          if (isset($event['end'])) {
            $event['date'] .= ' - <span class="end">';
            if ($event['newday'] == 1) {
              $event['date'] .= date('M. d, Y', $event['end']);
            }
            $event['date'] .= ' <span class="time">';
            if ($event['newday'] == 1 && $event['allday'] == 1) {
              $event['date'] .= '(all day)';
            } 
            else {
              $event['date'] .= date('g:ia', $event['end']);
            }
            $event['date'] .= '</span></span>';
          }
          $event['title'] = $event_title;
          $event['link'] = $event_link;
          $event['body'] = implode(' ', $event_body);
          $calendar_output .= '<div class="event"><div class="date">';
          $calendar_output .= $event['date'];
          $calendar_output .= '</div><div class="description"><div class="event-title"><a href="' . base_path() . 'calevent?path=';
          $calendar_output .= $event['link'];
          $calendar_output .= '" rel="lightmodal[|width:560px;]">';
          $calendar_output .= $event['title'];
          $calendar_output .= '</a></div><div class="teaser">';
          $calendar_output .= $event['body'];
          $calendar_output .= '</div></div></div>';
        }
        if ($flag != 0) {
          $calendar_output .= '</div><div class="view-more"><a href="http://calendar.oregonstate.edu/advanced/today+60/';
          $calendar_output .= $shortname;
          $calendar_output .= '">view more events &raquo;</a></div>';
        }
        if ($flag == 0) $calendar_output = '';
        $block['subject'] = t('Upcoming Events');
        $block['content'] = $calendar_output;
        unset($shortname);
        unset($lookahead);
        unset($disp_num);
        unset($teaser);
        return $block;
      case 4:
        $shortname = variable_get('extension_settings_calendar4_shortname', '');
        $lookahead = variable_get('extension_settings_calendar4_lookahead', '90');
        $disp_num = variable_get('extension_settings_calendar4_numdisplay', '5');
        $teaser = variable_get('extension_settings_calendar4_teaser', '15');
        $calendar_output = '';
        $xml_path = 'http://calendar.oregonstate.edu/today+' . $lookahead . '/list/' . $shortname . '/rss20.xml';
        $xml = simplexml_load_file($xml_path);
        $flag = count($xml->channel->item);
        if ($shortname == '') $flag = 0;
        if ($flag != 0) {
          $calendar_output .= '<div id="calendar"><a class="rss" href="';
          $calendar_output .= $xml_path;
          $calendar_output .= '"><img src="http://extension.oregonstate.edu/sites/default/files/images/icons/rss_icon.png" width="15" height="15" /></a>';
        }
        for ($i = 0; $i < count($xml->channel->item) && $i < $disp_num; $i++) {
          unset($event);
          $event = $xml->channel->item[$i];
          $event_title = $event->title;
          $event_link = $event->link;
          preg_match('/<div(.*?)<\/div>/', $event->description, $matches);
          $dates = strip_tags($matches[0]);
          $event->description = preg_replace('/<div(.*?)<\/div>/', '', $event->description);
          $event_body = preg_split('/\s+/', trim(strip_tags($event->description)), ($teaser + 1));
          if (count($event_body) == $teaser + 1) {
            array_pop($event_body);
            $event_body[] = '&hellip;';
          }
          unset($event);
          $event['allday'] = 0;
          if (preg_match('/\(.*?\)/', $dates) != 0) $event['allday'] = 1;
          $dates = explode(' - ', preg_replace('/\(.*?\)/', '', $dates));
          $event['start'] = strtotime($dates[0]);
          $event['newday'] = 0;
          if (isset($dates[1])) {
            if (preg_match('/(mon)|(tue)|(wed)|(thu)|(fri)|(sat)|(sun)/i', $dates[1]) != 0) {
              $event['newday'] = 1;
            }
            $event['end'] = strtotime($dates[1]);
          }
          $event['date'] = '<span class="start">';
          $event['date'] .= date('M. d, Y', $event['start']) . ' <span class="time">';
          if (!isset($event['end']) && $event['newday'] == 0) {
            $event['date'] .= '(all day)';
          } 
          elseif ($event['allday'] == 1 && $event['newday'] == 1) {
            $event['date'] .= '';
          } 
          else {
            $event['date'] .= date('g:ia', $event['start']);
          }
          $event['date'] .= '</span></span>';
          if (isset($event['end'])) {
            $event['date'] .= ' - <span class="end">';
            if ($event['newday'] == 1) {
              $event['date'] .= date('M. d, Y', $event['end']);
            }
            $event['date'] .= ' <span class="time">';
            if ($event['newday'] == 1 && $event['allday'] == 1) {
              $event['date'] .= '(all day)';
            } 
            else {
              $event['date'] .= date('g:ia', $event['end']);
            }
            $event['date'] .= '</span></span>';
          }
          $event['title'] = $event_title;
          $event['link'] = $event_link;
          $event['body'] = implode(' ', $event_body);
          $calendar_output .= '<div class="event"><div class="date">';
          $calendar_output .= $event['date'];
          $calendar_output .= '</div><div class="description"><div class="event-title"><a href="' . base_path() . 'calevent?path=';
          $calendar_output .= $event['link'];
          $calendar_output .= '" rel="lightmodal[|width:560px;]">';
          $calendar_output .= $event['title'];
          $calendar_output .= '</a></div><div class="teaser">';
          $calendar_output .= $event['body'];
          $calendar_output .= '</div></div></div>';
        }
        if ($flag != 0) {
          $calendar_output .= '</div><div class="view-more"><a href="http://calendar.oregonstate.edu/advanced/today+60/';
          $calendar_output .= $shortname;
          $calendar_output .= '">view more events &raquo;</a></div>';
        }
        if ($flag == 0) $calendar_output = '';
        $block['subject'] = t('Upcoming Events');
        $block['content'] = $calendar_output;
        unset($shortname);
        unset($lookahead);
        unset($disp_num);
        unset($teaser);
        return $block;
      case 5:
        $header_top_menu_items = variable_get('extension_settings_header_menu', '');
        if ($header_top_menu_items == '') {
          $site_type = variable_get('extension_settings_site_type', '1');
          switch ($site_type) {
            case '2':
              $header_top_menu_items = array(
                '0' => array(
                  'title' => 'College of Agricultural Science',
                  'href' => 'http://agsci.oregonstate.edu',
                ),
                '1' => array(
                  'title' => 'OSU Extension',
                  'href' => 'http://extension.oregonstate.edu',
                ),
                '2' => array(
                  'title' => 'Donate',
                  'href' => 'https://osufoundation.org/giving/online_gift.shtml?first_designation=College%20of%20Agricultural%20Sciences',
                ),
              );
              break;
            case '3':
              $header_top_menu_items = array(
                '0' => array(
                  'title' => 'College of Agricultural Science',
                  'href' => 'http://agsci.oregonstate.edu',
                ),
                '1' => array(
                  'title' => 'OSU Extension',
                  'href' => 'http://extension.oregonstate.edu',
                ),
                '2' => array(
                  'title' => 'Donate',
                  'href' => 'http://extension.oregonstate.edu/get-involved/donate',
                ),
              );
              break;
            default:
              $header_top_menu_items = array(
                '0' => array(
                  'title' => 'Outreach &amp; Engagement',
                  'href' => 'http://outreach.oregonstate.edu',
                ),
                '1' => array(
                  'title' => 'OSU Extension',
                  'href' => 'http://extension.oregonstate.edu',
                ),
                '2' => array(
                  'title' => 'Donate',
                  'href' => 'http://extension.oregonstate.edu/get-involved/donate',
                ),
              );
              break;
          }
        }
        foreach (array_keys($header_top_menu_items) as $key) {
          $header_top_menu_part[$key] = '<a href="' . $header_top_menu_items[$key]['href'] . '" title="' . $header_top_menu_items[$key]['title'] . '">' . $header_top_menu_items[$key]['title'] . '</a>';
        }
        $block_content = implode('&nbsp;&nbsp;|&nbsp;&nbsp;', $header_top_menu_part);        
        $block['subject'] = t('');
        $block['content'] = $block_content;
        return $block;
/*      case 6:
        $badge_content = '<a title="Oregon State University Extension Service: Health &amp; Wellness" href="http://extension.oregonstate.edu/node/308"><img src="http://extension.oregonstate.edu/sites/default/themes/extension/images/badges/extbdg308.gif" width="190" height="52" alt="Oregon State University Extension Service: Health &amp; Wellness badge image" /></a>';
        $block['subject'] = t('');
        $block['content'] = t($badge_content);
        return $block;
      case 7:
        $badge_content = '<a title="Oregon State University Extension Service: Small Farms" href="http://extension.oregonstate.edu/node/304"><img src="http://extension.oregonstate.edu/sites/default/themes/extension/images/badges/extbdg304.gif" width="190" height="52" alt="Oregon State University Extension Service: Small Farms badge image" /></a>';
        $block['subject'] = t('');
        $block['content'] = t($badge_content);
        return $block;
      case 8:
        $block['subject'] = t('');
        $block['content'] = t('');
        return $block; */
      case 9:
        $block['subject'] = t('');
        $block['content'] = extension_settings_globalblock_content('1');
        return $block;
      case 10:
        $block['subject'] = t('');
        $block['content'] = extension_settings_globalblock_content('2');
        return $block;
      case 11:
        $neapolitan_output = '<div style="width: 580px; margin: 10px auto 0; padding-bottom: 5px; border-top: 1px dotted #999;"></div>
        <div style="margin: 15px 0; padding: 0 1.5%; border-right: 1px solid #CCC; height: 220px; width: 170px; float: left;">
        <div style="height: 110px;">
          <a style="display: block; width: 106px; margin-left: 0;" href="http://oregonprogress.oregonstate.edu/" title="Oregon&#39;s Agricultural Progress">
          <img src="http://extension.oregonstate.edu/_includes/images/OAP_latest_thumb.jpg" width="81" height="106" alt="OAP cover image"/>
          </a>
          </div>
          <div style="width: 150px; margin-left: 0; line-height: 16px; font-size: 12px;">
          <strong>Oregon&#39;s Agricultural Progress</strong><br/>
          <span style="font-size: 11px;">
            The research magazine for Oregon State University Agricultural Experiment Station
          </span>
          </div>
        </div>
        <div style="margin: 15px 0; padding: 0 1.5%; border-right: 1px solid #CCC; height: 220px; width: 190px; float: left;">
          <div style="height: 98px; margin-top: 12px;">
            <a style="display: block; width: 132px; margin: auto;" href="http://extension.oregonstate.edu/ask-an-expert" title="Ask An Expert">
              <img src="http://extension.oregonstate.edu/_includes/images/ask-an-expert.png" width="132" height="89" alt="Ask An Expert image" />
            </a>
          </div>
          <div style="width: 150px; margin: auto; line-height: 16px; font-size: 12px;">
            <strong>Ask an Expert</strong><br/>
            <span style="font-size: 11px;">
              Addressing real-life questions with research-based answers... Ask an Expert at Oregon State University.
            </span>
          </div>
        </div>
        <div style="margin: 15px 0; padding: 0 1.5%; height: 220px; width: 150px; float: left;">
          <div style="height: 110px;">
            <a style="display: block; width: 118px; margin: auto;" href="http://extension.oregonstate.edu/catalog/" title="Publications">
              <img src="http://extension.oregonstate.edu/_includes/images/pubs_white-bg.jpg" width="118" height="102" alt="Extension Publications image"/>
            </a>
          </div>
          <div style="width: 150px; margin-left: 10px; line-height: 16px; font-size: 12px;">
            <strong>Publications</strong><br/>
            <span style="font-size: 11px;">
              OSU Extension&#39;s Publications and Multimedia Catalog.
            </span>
          </div>
        </div>
        <div style="clear: both; height: 10px; width: 1px;"></div>';
        $block['subject'] = t('');
        $block['content'] = $neapolitan_output;
        return $block;
      case 12:
        $banner_content = '';
        $empty_banners = array(
          '1' => array(
            'display' => 0,
            ),
          '2' => array(
            'display' => 0,
            ),
          '3' => array(
            'display' => 0,
            ),
          );
        $banners = variable_get('extension_settings_banners', $empty_banners);
        if ($banners['1']['display'] == 1) {
          $banner[$banners['1']['weight']] = '<div class="emergency-banner"><a href="http://extension.oregonstate.edu/tough_times/ten-tips"><img src="' . base_path() . drupal_get_path('module', 'extension_settings') .'/images/ten-tips-tough-times.png" alt="Ten tips for tough times" /></a></div>';
        }
        if ($banners['2']['display'] == 1) {
          $banner[$banners['2']['weight']] = '<div class="emergency-banner"><a href="http://extension.oregonstate.edu/tough_times/emergency/natural-disasters"><img src="' . base_path() . drupal_get_path('module', 'extension_settings') .'/images/happen-to-you.png" alt="It could happen to you" /></a></div>';
        }
        if ($banners['3']['display'] == 1) {
          $banner[$banners['3']['weight']] = '<div class="emergency-banner"><a href="http://juniper.oregonstate.edu/tough-times/"><img src="' . base_path() . drupal_get_path('module', 'extension_settings') .'/images/tough-times-woods.png" alt="Tough times in the woods" /></a></div>';
        }
        ksort($banner);
        if ($banners['1']['display'] == 1 || $banners['2']['display'] == 1 || $banners['3']['display'] == 1) {
          $banner_content = '<div class="emergency-banners-wrapper">' . implode('', $banner) . '</div>';
        }
        $block['subject'] = t('');
        $block['content'] = $banner_content;
        return $block;
      case 13:
      if (user_access('authenticated')) {
        $block_content = file_get_contents('http://extension.oregonstate.edu/_includes/drupal_help_block.php');
        $block['subject'] = t('Get help with your website');
        $block['content'] = $block_content;
        return $block;
      }
    }
  }
}
function extension_settings_globalblock_content($globalblock_id) {
  $fileurl = 'http://extension.oregonstate.edu/globalblock' . $globalblock_id;
  $globaldata = file_get_contents($fileurl);
  $site_region = variable_get('extension_settings_region', '');
  $globalblock_content = '';
  if ($globalblock_id == '1') {
    $globaldata = unserialize($globaldata);
    unset($emergency_content);
    foreach (array_keys($globaldata) as $key) {
      if (in_array($site_region, $globaldata[$key]['regions'])) {      
        $emergency_content .= '<!--[if IE 6]> <style type="text/css"> .emergency-arrow { background-image: url(\'' . base_path() . drupal_get_path('module', 'extension_settings') . '/images/emergency_arrow.gif\'); } .emergency-wrapper { background-image: url(\'' . base_path() . drupal_get_path('module', 'extension_settings') . '/images/emergency_wrapper_black.png\'); background-repeat: repeat-y; } .emergency-wrapper-black { top: 50%; }</style> <![endif]-->';
        $emergency_content .= '<div class="emergency emergency-' . $key . '"><h2 class="emergency-title">' . check_plain($globaldata[$key]['title']) . '</h2>';
        $emergency_content .= '<div class="emergency-body">' . $globaldata[$key]['content'] . '</div>';
        $emergency_content .= '</div>';
      }
    }
    if (isset($emergency_content)) $globalblock_content = '<div class="emergency-wrapper"><div class="emergency-wrapper-black"><div class="emergency-info-label">Emergency<br />Information</div></div><div class="emergency-arrow"></div><div class="emergency-info">' . $emergency_content . '</div></div>';
  }
  if ($globalblock_id == '2') {
    if ($globaldata) {
      $regionslength = strpos($globaldata, '</regions>') - 47;
      $globalregions = explode(',', substr($globaldata, 47, $regionslength));
      if (in_array($site_region, $globalregions)) {
        $globalcontentstart = strpos($globaldata, '</regions>') + 31;
        $globalblock_content = substr($globaldata, $globalcontentstart, -22);
      }
    }
  }
  return $globalblock_content;
}
/**
 * function to remove all given values from an array
*/
function extension_settings_remove_item_by_value($array, $val = '', $preserve_keys = TRUE) {
  if (empty($array) || !is_array($array)) return FALSE;
  if (!in_array($val, $array)) return $array;
  foreach ($array as $key => $value) {
    if ($value == $val) unset($array[$key]);
  }
  return ($preserve_keys === TRUE) ? $array : array_values($array);
}

function extension_settings_global_block_1_code() {
  $global_content = variable_get('extension_settings_global_content_1', '');
  if ($global_content == '') {
    return NULL;
  } 
  else {  
    foreach (array_keys($global_content) as $key) {
      $global_content[$key]['regions'] = extension_settings_remove_item_by_value($global_content[$key]['regions'], '0');
    }
    print serialize($global_content);
    return NULL;
  }

}
function extension_settings_global_block_2_code() {
  $global_content = variable_get('extension_settings_global_content_2', '');
  if ($global_content == '') {
    return NULL;
  } 
  else {
    $global_content['regions'] = extension_settings_remove_item_by_value($global_content['regions'], '0');
    $xml_data['regions'] = implode(',', $global_content['regions']);
    $xml_data['content'] = $global_content['content'];
    print '<?xml version="1.0" encoding="UTF-8"?>';
    print '<regions>' . $xml_data['regions'] . '</regions>';
    print '<globalblock_content>' . $xml_data['content'] . '</globalblock_content>';
    return NULL;
  }
}

function extension_settings_calendar_event() {
  $data = '';
  if (isset($_GET['path'])) {
    $osu_calendar_data = file_get_contents($_GET['path']);
    $data = extension_settings_get_string_between($osu_calendar_data, '<!-- BEGIN EVENT DETAIL VIEW -->', '<!-- END EVENT DETAIL VIEW -->');
    $data = preg_replace('/\s?style=".*?"/', '', $data);
    $data = preg_replace('/<hr \s?\/>/', '', $data);
    $data = str_replace('<div class="view_titlebar"><div class="view_nav_title"><h2>Event Details</h2></div></div>', '', $data);
    $data = str_replace("</h2>\n<br />", '</h2>', $data);
    $data = str_replace('<table>', '<div class="table">', $data);
    $data = str_replace('</table>', '</div>', $data);
    $data = preg_replace('/<\/?tbody>/', '', $data);
    $data = str_replace('<tr>', '<div class="table-row">', $data);
    $data = str_replace('</tr>', '</div>', $data);
    $data = str_replace('<th>', '<div class="column-left">', $data);
    $data = str_replace('</th>', '</div>', $data);
    $data = str_replace('<td>', '<div class="column-right">', $data);
    $data = str_replace('</td>', '</div>', $data);
    $data = '<div id="extension-calendar-lightbox">' . $data . '</div>';
  }
  print $data;
}

function extension_settings_get_string_between($string, $start, $end) {
  $string = " ". $string;
  $ini = strpos($string, $start);
  if ($ini == 0) return "";
  $ini += strlen($start);
  $len = strpos($string, $end, $ini) - $ini;
  return substr($string, $ini, $len);
}

/**
 * Adds a comma seperated list for multivalue text fields
*/
/**
 * Implementation of hook_theme().
 */
function extension_settings_theme() {
 return array(
   'extension_settings_formatter_comma' => array(
     'arguments' => array(
       'element' => NULL,
     ),
   ),
   'extension_settings_banners' => array(
     'arguments' => array(
       'form' => NULL,
      ),
     'file' => 'includes/extension_settings.banners.inc',
   ),
   'extension_settings_header_menu' => array(
     'arguments' => array(
       'form' => NULL,
      ),
     'file' => 'includes/extension_settings.header_menu.inc',
   ),
   'extension_settings_global_emergency' => array(
     'arguments' => array(
       'form' => NULL,
      ),
     'file' => 'includes/extension_settings.global.emergency.inc',
   ),
 );
}
/**
 * Implementation of hook_field_formatter_info().
 */
function extension_settings_field_formatter_info() {
 return array(
   'comma' => array(
    'label' => t('Comma separated'),
    'multiple values' => CONTENT_HANDLE_MODULE,
    'field types' => array('text'),
   ),
 );
}
/**
 * Theme function for Comma separated
 */
function theme_extension_settings_formatter_comma($element) {
 $i=0;
 $items=array();
 while (isset($element[$i])) {
  $item=theme_text_formatter_default($element[$i]);
  if (!empty($item)) {
   $items[]=$item;
  }
  $i++;
 }
 return implode(', ', $items);
}
/**
* Implementation of hook_form_alter().
*/
function extension_settings_form_alter(&$form, $form_state, $form_id) {
 
  switch ($form_id) {
    // This is our form ID.
   
   case 'osu_search_template_form':
    //dsm($form);
    unset($form['search-scope']['#title']);
    unset($form['search-scope']['#type']);
    unset($form['submit']['#value']);
   break;
   
 
    
    case 'google_cse_searchbox_form':
      // remove form options on the form block
      unset($form['sitesearch']);
    break;
    case '_linkit_form':
      $form['link']['link']['#description'] = 'Start typing the name of the page to link to, enter a full URL (http://www.example.com), <strong>OR</strong> select Browse Server to upload or select a file.';
    break;
  }
  
  if (strstr($form['form_id']['#value'], 'node')) {
    foreach (array_keys($form['menu']['parent']['#options']) as $item) {
      if (strstr($item, 'navigation')) unset($form['menu']['parent']['#options'][$item]);
      if (variable_get('extension_settings_site_type', 0) != 4) {
        if (strstr($item, 'primary-links')) unset($form['menu']['parent']['#options'][$item]);
      }
    }
    
    if (isset($form['body_field'])) {
      $form['body_field']['teaser_include']['#default_value'] = TRUE;
      $form['body_field']['teaser_include']['#access'] = FALSE;
    }
    $form['revision_information']['#access'] = FALSE;
    $form['author']['#access'] = FALSE;
  }
  
}

